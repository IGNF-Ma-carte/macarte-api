openapi: 3.0.0
info:
  title: 'API macarte'
  version: '1.0'
servers:
  -
    url: 'https://macarte-qualif.ign.fr/'
    description: 'Accède aux données de l''environnement Ma Carte'
paths:
  /api/editorial/followers:
    get:
      tags:
        - Editorial
      operationId: e381179d562ca09a83d431b1dcfe77a5
      responses:
        '200':
          description: 'Liste des followers par réseau social'
          content:
            application/json:
              schema:
                properties:
                  facebook: { type: string, example: 65K }
                  twitter: { type: string, example: 13K }
                  linkedin: { type: string, example: 24K }
                  instagram: { type: string, example: 11K }
                type: object
        '404':
          $ref: '#/components/responses/NotFound'
  /api/editorial/megamenu:
    get:
      tags:
        - Editorial
      operationId: 4e6c574f04b8d8c4c2b65b6f58a53249
      responses:
        '200':
          description: 'Contenu html du megamenu'
          content:
            application/json:
              schema:
                properties:
                  html: { type: string }
                type: object
        '404':
          $ref: '#/components/responses/NotFound'
  /api/editorial/categories:
    get:
      tags:
        - Editorial
      operationId: af1658725bcb2cebfbe9be68d7609c7e
      responses:
        '200':
          description: 'Liste des categories des articles de l''editorial'
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: { key: { description: 'clé de la catégorie', type: string }, value: { description: 'Nomde la catégorie', type: string } }
                  type: object
  '/api/editorial/articles/{category}':
    get:
      tags:
        - Editorial
      operationId: ba7f19a2655d46d5a131b6249ed0716b
      parameters:
        -
          name: category
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Liste des articles de la categorie'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/maps:
    get:
      tags:
        - Map
      operationId: c4ff2a05ff281b173a58be5296bc229b
      parameters:
        -
          name: context
          in: query
          description: "Contexte de la recherche. Doit être parmi :<br>\r\n                    - 'atlas' : recherche publique parmi les cartes partagées <br>\r\n                    - 'profile' : recherche parmi les carte de l'utilisateur. Il doit être connecté (erreur 401 possible), <br>\r\n                    <br>\r\n                    Une carte partagée est une carte <br>\r\n                    - ayant un thème <br>\r\n                    - avec les attribut share = 'atlas', valid = true et active = true  <br>\r\n                    <br>\r\n                    **Ajouter le header 'Authorization: Bearer xxx' pour le cas 'profile'** pour ne pas avoir les erreurs 401 et 403\r\n     *          "
          required: false
          schema:
            type: string
            default: atlas
        -
          name: query
          in: query
          description: "Un ou plusieurs mots que doivent contenir le titre, la description ou le thème <br>\r\n                    S'il y a plusieurs mots, la recherche l'interprètera comme un ET \r\n                "
          required: false
          schema:
            type: string
        -
          name: theme
          in: query
          description: "Thème des cartes <br>\r\n                    - nom du thème  <br>\r\n                    - 'undefined' pour avoir les cartes qui n'ont pas de thème <br>\r\n                    - null pour avoir toutes les cartes, indépendemment du thème\r\n                "
          required: false
          schema:
            type: string
        -
          name: type
          in: query
          description: 'Type des cartes (''macarte'', ''storymap'')'
          required: false
          schema:
            type: string
        -
          name: premium
          in: query
          description: 'Premium des cartes (''default'', ''edugeo'')'
          required: false
          schema:
            type: string
        -
          name: user
          in: query
          description: 'Nom public du créateur des cartes'
          required: false
          schema:
            type: string
        -
          name: active
          in: query
          description: "Si context 'profile' et si renseigné, n'inclut que les cartes actives (true) ou non-actives (false)<br>\r\n                        Si context 'atlas', active = true\r\n                "
          required: false
          schema:
            type: boolean
        -
          name: valid
          in: query
          description: "Si context 'profile' et si renseigné, n'inclut que les cartes valides (true) ou invalides (false)<br>\r\n                        Si context 'atlas', valid = true\r\n                "
          required: false
          schema:
            type: boolean
        -
          name: share
          in: query
          description: "Si context 'profile' et si renseigné, n'inclut que les cartes publiques ('atlas') ou privées ('private') de l'utilisateur<br>\r\n                    Si context 'atlas', share = 'atlas' \r\n                "
          required: false
          schema:
            type: string
        -
          name: sort
          in: query
          description: 'Tri des cartes (''date'', ''rank'', ''views'')'
          required: false
          schema:
            type: string
            default: date
        -
          name: limit
          in: query
          description: "Nombre maximum de cartes à retourner<br>\r\n                    - Limit peut être 'all' dans le context 'profile' -> l'utilisateur reçoit toutes ses cartes<br>\r\n                    - Si limit > 100, limit sera considérée comme 100\r\n                "
          required: false
          schema:
            type: integer|string
            default: 25
        -
          $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: 'Liste des cartes (tout ou partie), recherchées selon les critères définis dans le query'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map_research'
        '206':
          $ref: '#/components/responses/PartialContent'
        '401':
          $ref: '#/components/responses/NotConnected'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - Map
      operationId: b595620ac876211c6c59378b38586211
      parameters:
        -
          name: carte
          in: formData
          required: true
          schema:
            $ref: '#/components/schemas/Map_add'
        -
          name: file
          in: formData
          description: 'Contenu de la carte au format .carte'
          required: true
          schema:
            type: file
            format: json
      responses:
        '201':
          description: 'Attributs de la carte créée'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map_view'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotConnected'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        -
          scalar: bearer
  /api/maps/users:
    get:
      tags:
        - Map
      description: 'Autocompletion des utilisateurs ayant des cartes publiques correspondant aux critères de recherche'
      operationId: f0b6ce4c22abfe03685aca5d9a988171
      parameters:
        -
          name: theme
          in: query
          description: 'Thème des cartes (nom du thème ou ''Non défini'')'
          required: false
          schema:
            type: string
        -
          name: public_name
          in: query
          description: 'string que le public_name des utilisateurs doit inclure'
          required: false
          schema:
            type: string
        -
          name: query
          in: query
          description: "Un ou plusieurs mots que doivent contenir le titre, la description ou le thème <br>\r\n                    S'il y a plusieurs mots, la recherche l'interprètera comme un ET \r\n                "
          required: false
          schema:
            type: string
        -
          $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: 'Liste des noms publics des utilisateurs correspondant aux critères de recherche'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '404':
          $ref: '#/components/responses/NotFound'
  '/api/maps/{view_id}':
    get:
      tags:
        - Map
      description: 'Récupérer les metadata de la carte par son identifiant de visualisation'
      operationId: 28156edf83fef8e7715fc972b00d96f5
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: 'Attributs d''une carte pour visualisation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map_view'
        '404':
          $ref: '#/components/responses/NotFound'
        '451':
          $ref: '#/components/responses/Invalid'
  '/api/maps/{edit_id}/edit':
    get:
      tags:
        - Map
      description: 'Récupérer les metadata de la carte par son identifiant d''édition'''
      operationId: 4c1bc8107bafff1182da2d283c43e1a2
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: 'Attributs d''une carte pour edition'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map_view'
        '404':
          $ref: '#/components/responses/NotFound'
        '451':
          $ref: '#/components/responses/Invalid'
      security:
        -
          scalar: bearer
  '/api/maps/{view_id}/file':
    get:
      tags:
        - Map
      description: 'Récupérer les data de la carte par son identifiant de visualisation'
      operationId: 9acb5b0b0481181f5182e1da773e35f8
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: 'Contenu d''une carte'
          content:
            application/json:
              schema: {  }
        '404':
          $ref: '#/components/responses/NotFound'
        '451':
          $ref: '#/components/responses/Invalid'
  '/api/maps/{edit_id}/edit/file':
    get:
      tags:
        - Map
      description: 'Récupérer les data de la carte par son identifiant d''édition'
      operationId: 4dd4ded69eecb0459bd3ffbb207e51f9
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '200':
          description: 'Contenu d''une carte'
          content:
            application/json:
              schema: {  }
        '404':
          $ref: '#/components/responses/NotFound'
        '451':
          $ref: '#/components/responses/Invalid'
      security:
        -
          scalar: bearer
  '/api/maps/{edit_id}':
    delete:
      tags:
        - Map
      operationId: 82e0c67a87ca511a4033db315ab3ea3a
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/Deleted'
        '401':
          $ref: '#/components/responses/NotConnected'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        -
          scalar: bearer
    patch:
      tags:
        - Map
      operationId: 84bf99e8098969acdf597e6fb94ba5cd
      parameters:
        -
          $ref: '#/components/parameters/id'
      requestBody:
        description: "Attributs de la carte, ne renseigner que les champs à modifier<br>\r\n__new_edit_id__ : boolean, si true -> génère un nouvel identifiant de modifiant pour la carte\r\n"
        required: true
        content:
          application/json:
            schema:
              type: object
              allOf:
                -
                  properties: { new_edit_id: { description: 'Demande à modifier l''id de modification', type: boolean } }
                -
                  $ref: '#/components/schemas/Map_add'
      responses:
        '200':
          description: 'Attributs d''une carte pour visualisation'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Map_view'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotConnected'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        -
          scalar: bearer
  '/api/maps/{edit_id}/file':
    post:
      tags:
        - Map
      operationId: 53d51572f2cc58bd239071366c0bcf04
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          name: file
          in: formData
          description: 'Contenu de la carte au format .carte'
          required: true
          schema:
            type: file
            format: json
      responses:
        '200':
          description: 'Contenu d''une carte'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        -
          scalar: bearer
  /api/me:
    get:
      tags:
        - User
      operationId: 8c325367503eebff893de1e9a05f2efd
      responses:
        '200':
          description: 'Attributs de l''utilisateur connecté'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_view'
        '401':
          $ref: '#/components/responses/NotConnected'
      security:
        -
          scalar: bearer
    patch:
      tags:
        - User
      description: "parameter **current_password** is required to patch username, email and new_password<br>\r\n                username, email et public_name sont uniques, la réponse 400 '... already used' peut être renvoyée\r\n     "
      operationId: 565897838a26198f5f59e59240e4e354
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User_me_edit'
      responses:
        '200':
          description: 'Attributs de l''utilisateur'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_view'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotConnected'
      security:
        -
          scalar: bearer
  /api/medias:
    get:
      tags:
        - Media
      description: 'Renvoie les medias de l''utilisateur connecté'
      operationId: ad8d1482d4c232853562cc69715b3406
      parameters:
        -
          name: name
          in: query
          description: 'Name contient cette valeur'
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          description: 'Identifiant du média recherché'
          required: false
          schema:
            type: integer
        -
          name: valid
          in: query
          description: 'Si ''true'', limite la recherche aux médias invalidés par les administrateurs'
          required: false
          schema:
            type: boolean
        -
          name: sort
          in: query
          description: 'tri des medias, parmi [''size'', ''date'']'
          required: false
          schema:
            type: boolean
            default: date
        -
          $ref: '#/components/parameters/offset'
        -
          $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: 'liste des medias'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Media_list'
        '401':
          $ref: '#/components/responses/NotConnected'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        -
          scalar: bearer
    post:
      tags:
        - Media
      description: 'Ajoute un media à l''utilisateur connecté'
      operationId: 84f1cf5ebf6e0098692204c5b1535a69
      parameters:
        -
          name: file
          in: formData
          description: 'image à ajouter à la bibliothèque, le fichier doit faire moins de 2 Mo'
          required: true
          schema:
            type: file
            format: png|jpg|jpeg|gif
        -
          name: folder
          in: formData
          description: 'Dossier où ajouter l''image'
          schema:
            type: string
            default: 'Non classé'
        -
          name: name
          in: formData
          description: 'Nom du fichier'
          schema:
            type: string
            default: 'original_name du fichier'
      responses:
        '201':
          description: 'Attributs du media créé'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotConnected'
        '413':
          $ref: '#/components/responses/TooLarge'
      security:
        -
          scalar: bearer
  /api/medias/folders:
    get:
      tags:
        - Media
      description: 'Renvoie dossiers d''images de l''utilsiateur'
      operationId: 304e59ced3951258230a472ffd5dce67
      responses:
        '200':
          description: 'liste des dossiers d''images'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/NotConnected'
      security:
        -
          scalar: bearer
  '/api/image/{filename}':
    get:
      tags:
        - Media
      description: "Renvoie l'image au format binaire, l'extension n'est pas prise en compte (ex : abc1234) <br>\r\n                Préfixer le filename par 'thumb_' pour recevoir la miniature (200px sur la plus grande dimension)\r\n     *      "
      operationId: dd8a3ed18a1155118437711141cae8d0
      parameters:
        -
          name: filename
          in: path
          description: 'Nom du fichier'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Fichier binaire de l''image'
        '404':
          $ref: '#/components/responses/NotFound'
        '451':
          $ref: '#/components/responses/Invalid'
  '/api/medias/{id}':
    delete:
      tags:
        - Media
      description: 'Supprime un media de l''utilisateur connecté. Un média non valide ne peut pas être supprimé'
      operationId: 4b41607ef624888f7b6c73d336305dd2
      parameters:
        -
          $ref: '#/components/parameters/id'
      responses:
        '204':
          $ref: '#/components/responses/Deleted'
        '401':
          $ref: '#/components/responses/NotConnected'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '451':
          $ref: '#/components/responses/Invalid'
      security:
        -
          scalar: bearer
  '/api/medias/{id}/{attribute}':
    put:
      tags:
        - Media
      description: 'Affecte value à l''attribut du media d''identifiant id (attibute dans [''folder'', ''name''])'
      operationId: e720e84e3346ca80cd4440ee0b9d92d5
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          name: attribute
          in: path
          description: 'Attribut à modifier : doit etre parmi [''folder'', ''name'']'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                value:
                  description: 'valeur à affecter à l''attribut [folder => peut être null]'
                  type: string
              type: object
      responses:
        '200':
          description: 'Attributs de la carte créée'
          content:
            application/json:
              schema:
                properties:
                  id: { description: 'identifiant du média modifié', type: integer }
                  attribute: { description: 'attribut modifié', type: string }
                  value: { description: 'nouvelle valeur affectée à l''attribut', type: string }
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotConnected'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        -
          scalar: bearer
  '/api/medias/{id}/file':
    post:
      tags:
        - Media
      description: 'Modifie l''image'' associé au media'
      operationId: 78eaac378845f25d55178a6d1c0a6444
      parameters:
        -
          $ref: '#/components/parameters/id'
        -
          name: file
          in: formData
          description: 'image à associer à la bibliothèque, le fichier doit faire moins de 2 Mo'
          required: true
          schema:
            type: file
            format: png|jpg|jpeg|gif
      responses:
        '200':
          description: 'Attributs de la carte créée'
          content:
            application/json:
              schema:
                properties:
                  id: { description: 'identifiant du média modifié', type: integer }
                  attribute: { description: 'attribut modifié', type: string }
                  view_url: { description: 'url de l''image', type: string }
                  thumb_url: { description: 'url de la vignette', type: string }
                type: object
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/NotConnected'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '413':
          $ref: '#/components/responses/TooLarge'
      security:
        -
          scalar: bearer
  /api/notifications:
    get:
      tags:
        - Notifications
      operationId: 2d60b1d5b4693aeaf17b94d78551cf59
      responses:
        '200':
          description: 'Liste des notifications actives'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
  /api/login:
    post:
      tags:
        - Login
      operationId: c19de2fbeb914a1eb095ea4bc8242d9b
      parameters:
        -
          name: username
          in: query
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Jeton Jwt et rafraichissement'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        '401':
          description: 'Erreur dans le nom d''utilisateur ou le mot de passe'
          content:
            application/json:
              schema:
                properties:
                  code: { type: integer, example: '401' }
                  message: { type: string, example: 'Bad credentials' }
                type: object
        '429':
          description: 'Trop de tentatives de connexion échouées'
          content:
            application/json:
              schema:
                properties:
                  code: { type: integer, example: '429' }
                  message: { type: string, example: '5 tentatives de connexion échouées, allez sur /debloquer-mon-compte' }
                type: object
  /api/token/refresh:
    post:
      tags:
        - Login
      operationId: 26a9d1dfbaf768f672b4d0eba7d2a663
      parameters:
        -
          name: refresh_token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Jeton JWT et refresh'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
        '401':
          description: 'An authentication exception occurred'
          content:
            application/json:
              schema:
                properties:
                  code: { type: integer, example: '401' }
                  message: { type: string, example: 'An authentication exception occurred' }
                type: object
  /api/logout:
    post:
      tags:
        - Login
      operationId: 17cd40d6062e1990f0e90edddd985c80
      responses:
        '200':
          description: logout
        '401':
          $ref: '#/components/responses/NotConnected'
      security:
        -
          scalar: bearer
  /api/themes:
    get:
      tags:
        - Theme
      operationId: 9f56cc21f7235a53c93cde1879c1983b
      responses:
        '200':
          description: 'Liste des themes'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Theme'
  '/api/users/public/{public_id}':
    get:
      tags:
        - User
      parameters:
        -
          name: publicname
          in: path
          description: 'Identifiant public (immuable) de l''utilisateur'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Attributs publics de l''utilisateur'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User_public'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    Article:
      properties:
        id:
          description: 'Identifiant de l''article'
          type: integer
        category:
          description: 'Categorie de l''article'
          type: string
        position:
          description: 'Ordre d''affichage de l''article'
          type: number
        title:
          description: 'Titre de l''article'
          type: string
        content:
          description: 'Contenu de l''article'
          type: string
        tags:
          description: 'Tags de l''article'
          type: array
          items:
            type: string
        updated_at:
          description: 'Date de mise à jour de l''article'
          type: string
          format: date-time
        updated_by:
          description: 'Nom public de l''utilisateur qui a modifié l''article'
          type: string
        img_url:
          description: 'Url de l''image d''illustration de l''article'
          type: string
          format: uri
        link_text:
          description: 'Article de la catégorie news : texte du lien'
          type: string
        link_url:
          description: 'Article de la catégorie news : destination du lien'
          type: string
          format: uri
      type: object
    Bbox:
      description: 'Emprise visible de la carte (Haut, droite, bas, gauche)'
      type: array
      items:
        type: number
      maxItems: 4
      minItems: 4
    Map_add:
      description: Carte
      properties:
        title:
          description: 'Titre de la carte'
          type: string
        description:
          description: 'Description de la carte'
          type: string|null
        theme_id:
          description: 'identifiant du theme'
          type: integer
        type:
          description: 'Type de la carte (''macarte'', ''mesadresses'', statistic'', storymap'')'
          type: string
        premium:
          description: 'Premium de la carte (''default'', ''edugeo'')'
          type: string
          default: default
        active:
          description: 'Carte active (par ex : terminée ou non)'
          type: boolean
        share:
          description: 'Publication de la carte (''atlas'', ''private'')'
          type: string
          default: private
        bbox:
          $ref: '#/components/schemas/Bbox'
        img_url:
          description: 'Url de l''image illustrant la carte'
          type: string|null
          format: uri
      type: object
    Map_list:
      description: Carte
      properties:
        title:
          type: string
        title_url:
          description: 'Titre de la carte, adapté pour etre utilisé dans les url'
          type: string
        description:
          type: string
          nullable: true
        theme:
          type: string
          nullable: true
        theme_id:
          type: integer
          nullable: true
        type:
          type: string
        premium:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        nb_view:
          type: integer
        img_url:
          type: string
          format: uri
          nullable: true
        share:
          type: string
        bbox:
          $ref: '#/components/schemas/Bbox'
        view_id:
          type: string
        view_url:
          description: 'lien vers la visualisation de la carte'
          type: string
        edit_id:
          description: 'si auteur de la carte'
          type: string
        author:
          type: string
      type: object
    Map_view:
      description: Carte
      type: object
      allOf:
        -
          properties:
            data_url:
              description: 'lien vers le contenu de la carte'
              type: string
              format: uri
            data_edit_url:
              description: 'lien vers l''édition du contenu de la carte, si auteur de la carte'
              type: string
              format: uri
            editor:
              description: 'utilisateur qui a modifié le contenu, renvoyé si auteur de la carte'
              type: string
            creator_id:
              description: 'identifiant de l''utilisateur qui a créé le contenu, renvoyé si auteur de la carte'
              type: string
        -
          $ref: '#/components/schemas/Map_list'
    Media:
      description: media
      properties:
        id:
          description: 'identifiant du media'
          type: integer
        name:
          description: 'nom de l''image originale'
          type: string
        file:
          description: 'nom du fichier enregistré'
          type: string
        owner:
          description: 'username de l''utilisateur qui a chargé le media'
          type: string
        uploaded_at:
          description: 'date du chargement de l''image'
          type: string
          format: date-time
        size:
          description: 'Taille de l''image (en octet)'
          type: integer
        folder:
          description: 'Nom du fichier contenant le media'
          type: string
        valid:
          description: 'Validité de l''image'
          type: boolean
        view_url:
          description: 'Url de l''image'
          type: string
          format: uri
        thumb_url:
          description: 'Url de la vignette de l''image'
          type: string
          format: uri
      type: object
    Media_list:
      description: 'Liste de médias'
      properties:
        medias:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        count:
          description: 'Nombre de cartes correspondant à la recherche'
          type: integer
        limit:
          description: 'Nombre de cartes recues dans la requete'
          type: integer
        offset:
          description: 'Nombre de cartes à passer avant de ls inclure dans la requete'
          type: integer
      type: object
    Notification:
      description: Notifications
      properties:
        id:
          type: integer
        description:
          type: string
        scope:
          description: 'Applicatifs où afficher la notification'
          type: string
        showFrom:
          type: string
          format: date-time
        showUntil:
          type: string
          format: date-time
        repeatibility:
          description: 'Nombre de fois à afficher la notification'
          type: integer
      type: object
    Map_research:
      description: 'Recherche des cartes'
      properties:
        maps:
          type: array
          items:
            $ref: '#/components/schemas/Map_list'
        themes:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
        users:
          type: array
          items:
            properties:
              user:
                description: 'Nom public de l''utilisateur'
                type: string
              count:
                description: 'Nombre de cartes'
                type: integer
            type: object
        types:
          type: array
          items:
            properties:
              type:
                description: 'Nom du type'
                type: string
              count:
                description: 'Nombre de cartes'
                type: integer
            type: object
        premiums:
          type: array
          items:
            properties:
              premium:
                description: 'Nom du premium'
                type: string
              count:
                description: 'Nombre de cartes'
                type: integer
            type: object
        actives:
          type: array
          items:
            properties:
              active:
                description: 'booléen indiquant active/inactive'
                type: boolean
              count:
                description: 'Nombre de cartes'
                type: integer
            type: object
        valides:
          type: array
          items:
            properties:
              valid:
                description: 'booléen indiquant valide/invalide'
                type: boolean
              count:
                description: 'Nombre de cartes'
                type: integer
            type: object
        shares:
          type: array
          items:
            properties:
              share:
                description: 'Publication de la carte'
                type: string
              count:
                description: 'Nombre de cartes'
                type: integer
            type: object
        query:
          description: 'Mot(s) contenu(s) dans le titre, la description ou le theme des cartes'
          type: string
        count:
          description: 'Nombre de cartes correspondant à la recherche'
          type: integer
        limit:
          description: 'Nombre de cartes recues dans la requete'
          type: integer
        offset:
          description: 'Nombre de cartes à passer avant de ls inclure dans la requete'
          type: integer
      type: object
    Theme:
      description: Theme
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    Login:
      properties:
        token:
          description: 'Jeton JWT à envoyer dans le header Authorization: Bearer xxx'
          type: string
        refresh_token:
          description: 'Jeton pour rafraichir le jeton JWT à envoyer /api/token/refresh'
          type: string
      type: object
    User_public:
      properties:
        public_id:
          description: 'identifiant public de l''utilisateur, ne sera jamais modifié'
          type: string
        public_name:
          description: 'Unique, ne doit pas être déjà utilisé (Erreur 400)'
          type: string
        twitter_account:
          description: 'Nom de compte Twitter'
          type: string
        facebook_account:
          description: 'Nom de compte Facebook'
          type: string
        linkedin_account:
          description: 'Nom de compte LinkedIn'
          type: string
        presentation:
          description: 'Présentation publique'
          type: string
        profile_picture:
          description: 'Url de l''image de profil'
          type: string
          format: uri
        cover_picture:
          description: 'Url de l''image de couverture'
          type: string
          format: uri
      type: object
    User_edit:
      type: object
      allOf:
        -
          properties:
            email:
              description: 'Unique, ne doit pas être déjà utilisé (Erreur 400)'
              type: string
              format: email
            username:
              description: 'Unique, ne doit pas être déjà utilisé (Erreur 400)'
              type: string
        -
          $ref: '#/components/schemas/User_public'
    User_me_edit:
      type: object
      allOf:
        -
          properties:
            current_password:
              type: string
            new_password:
              type: string
        -
          $ref: '#/components/schemas/User_edit'
    User_view:
      type: object
      allOf:
        -
          properties:
            locked:
              description: 'Compte bloqué'
              type: boolean
            id:
              type: integer
            medias_limit_size:
              description: 'Taille globale limite des images uploadées (en octet)'
              type: integer
            medias_size:
              description: 'Taille globale des images uploadées (en octet)'
              type: integer
            roles:
              type: array
              items:
                type: string
        -
          $ref: '#/components/schemas/User_edit'
  responses:
    Deleted:
      description: 'La ressource a été supprimée'
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: '204'
              message:
                type: string
                example: 'La ressource a été supprimée'
            type: object
    PartialContent:
      description: 'Contenu partiel des ressources recherchées'
    BadRequest:
      description: 'La requête n''est pas correcte'
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: '404'
              message:
                type: string
                example: 'La requête n''est pas correcte'
            type: object
    NotConnected:
      description: 'Vous devez être connecté'
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: '401'
              message:
                type: string
                example: 'Vous devez être connecté'
            type: object
    NotFound:
      description: 'La resource n''existe pas'
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: '404'
              message:
                type: string
                example: 'La resource n''existe pas'
            type: object
    Forbidden:
      description: 'Vous n''avez pas accès à cette ressource'
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: '403'
              message:
                type: string
                example: 'Vous n''avez pas accès à cette ressource'
            type: object
    Invalid:
      description: 'Vous ne pouvez pas accéder à la ressource pour des raisons légales'
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: '451'
              message:
                type: string
                example: 'Vous ne pouvez pas accéder à la ressource pour des raisons légales'
            type: object
    TooLarge:
      description: 'L''objet joint est trop volumineux'
      content:
        application/json:
          schema:
            properties:
              code:
                type: integer
                example: '413'
              message:
                type: string
                example: 'L''objet joint est trop volumineux'
            type: object
  parameters:
    id:
      name: id
      in: path
      description: 'Identifiant de la resource'
      required: true
      schema:
        type: integer
    limit:
      name: limit
      in: query
      description: 'Nombre maximum d''objets à retourner'
      required: false
      schema:
        type: integer
        default: 15
    offset:
      name: offset
      in: query
      description: 'Le nombre d''objets à ignorer avant de commencer à collecter l''ensemble de résultats'
      required: false
      schema:
        type: integer
        default: 0
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header
      bearerFormat: JWT
      scheme: Bearer
